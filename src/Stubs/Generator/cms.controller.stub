<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Controller;
use Jhonoryza\InertiaBuilder\Inertia\Fields\Factory\Field;
use Jhonoryza\InertiaBuilder\Inertia\Tables\Actions\Action;
use Jhonoryza\InertiaBuilder\Inertia\Tables\Filters\Factory\Filter;
use Jhonoryza\InertiaBuilder\Inertia\Tables\Table;
use Jhonoryza\InertiaBuilder\Inertia\Tables\TableColumn;
use Jhonoryza\InertiaBuilder\Inertia\Form;
use App\Models\{{modelName}};
use App\Http\Requests\{{modelName}}StoreRequest;
use App\Http\Requests\{{modelName}}UpdateRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Inertia\Response;
{{imports}}

class {{className}} extends Controller
{
    public function index(): Response
    {
        $table = Table::make({{modelName}}::class)
            ->columns([
{{columns}}
            ])
            ->filters([
{{filters}}
            ])
            ->defaultSort('id', 'asc')
            ->actions([
                Action::make('new')
                    ->needRowSelected(false)
                    ->needConfirm(false),
                Action::make('delete')
                    ->label('Batch Delete')
                    ->message('Delete this item?'),
            ]);

        return Inertia::render('builder/index', [
            'data' => $table,
            'tableRoute' => route('{{routeName}}.index'),
            'routeName' => '{{routeName}}',
        ]);
    }

    public function actions(Request $request): RedirectResponse
    {
        $action = $request->get('action');
        $ids = $request->get('ids');

        switch ($action) {
            case 'new':
                return redirect()->route('{{routeName}}.create');
            case 'delete':
                {{modelName}}::destroy($ids);
                return redirect()
                    ->route('{{routeName}}.index')
                    ->with('success', 'Items ' . collect($ids)->implode(', ') . ' deleted successfully.');
            default:
                return redirect()
                    ->route('{{routeName}}.index')
                    ->with('failed', 'undefined action.');
        }
    }

    private function getForm(?{{modelName}} ${{modelVariable}} = null, $disable = false)
    {
        return Form::make()
            ->columns(1)
            ->fields([
{{fields}}
        ]);
    }

    public function show({{modelName}} ${{modelVariable}}): Response
    {
        return Inertia::render('builder/show', [
            'form' => $this->getForm(${{modelVariable}}, true),
            'routeName' => '{{routeName}}',
            'routeId' => ${{modelVariable}}->id,
        ]);
    }

    public function create(): Response
    {
        return Inertia::render('builder/create', [
            'form' => $this->getForm(),
            'routeName' => '{{routeName}}',
        ]);
    }

    public function edit({{modelName}} ${{modelVariable}}): Response
    {
        return Inertia::render('builder/edit', [
            'form' => $this->getForm(${{modelVariable}}),
            'routeName' => '{{routeName}}',
            'routeId' => ${{modelVariable}}->id,
        ]);
    }

    public function store({{modelName}}StoreRequest $request): RedirectResponse
    {
        $item = {{modelName}}::create($request->validated());

        return redirect()
            ->route('{{routeName}}.index')
            ->with('success', 'Item ' . $item->id . ' created successfully.');
    }

    public function update({{modelName}}UpdateRequest $request, {{modelName}} ${{modelVariable}}): RedirectResponse
    {
        ${{modelVariable}}->update($request->validated());

        return redirect()
            ->route('{{routeName}}.edit', ${{modelVariable}})
            ->with('success', 'Item ' . ${{modelVariable}}->id . ' updated successfully.');
    }

    public function destroy({{modelName}} ${{modelVariable}}): RedirectResponse
    {
        ${{modelVariable}}->delete();

        return redirect()
            ->route('{{routeName}}.index')
            ->with('success', 'Item ' . ${{modelVariable}}->id . ' deleted successfully.');
    }
}
